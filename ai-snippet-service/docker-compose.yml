services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: ai-snippets-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ai-snippets
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-snippets-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/ai-snippets --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ai-snippets-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      API_PORT: 3001
      MONGODB_URI: mongodb://mongodb:27017/ai-snippets
      AI_PROVIDER: ${AI_PROVIDER:-github}
      # GitHub Models (recommended)
      GITHUB_MODELS_TOKEN: ${GITHUB_MODELS_TOKEN}
      GITHUB_MODELS_ENDPOINT: ${GITHUB_MODELS_ENDPOINT:-https://models.inference.ai.azure.com}
      GITHUB_MODEL_NAME: ${GITHUB_MODEL_NAME:-gpt-4o}
      # OpenAI (alternative)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL_NAME: ${OPENAI_MODEL_NAME:-gpt-3.5-turbo}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ai-snippets-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend UI
  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: ai-snippets-ui
    restart: unless-stopped
    ports:
      - "3030:3030"
    environment:
      NODE_ENV: production
      UI_PORT: 3030
      API_BASE_URL: http://api:3001
    depends_on:
      api:
        condition: service_healthy
    networks:
      - ai-snippets-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3030', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test Runner (runs tests and exits)
  test:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: base
    container_name: ai-snippets-test
    environment:
      NODE_ENV: test
      MONGODB_URI: mongodb://mongodb:27017/ai-snippets-test
      AI_PROVIDER: github
      # Use mock values for tests
      GITHUB_MODELS_TOKEN: ghp-test-token-for-testing
      GITHUB_MODELS_ENDPOINT: https://test-endpoint.com
      GITHUB_MODEL_NAME: gpt-4o
      # Fallback for OpenAI tests
      OPENAI_API_KEY: sk-test-key-for-testing
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ai-snippets-network
    command: ["npm", "test"]
    profiles: ["test"]

networks:
  ai-snippets-network:
    driver: bridge
    name: ai-snippets-network

volumes:
  mongodb_data:
    name: ai-snippets-mongodb-data